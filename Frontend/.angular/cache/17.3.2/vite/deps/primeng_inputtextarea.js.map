{
  "version": 3,
  "sources": ["../../../../../node_modules/primeng/fesm2022/primeng-inputtextarea.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\n\n/**\n * InputTextarea adds styling and autoResize functionality to standard textarea element.\n * @group Components\n */\nclass InputTextarea {\n  el;\n  ngModel;\n  control;\n  cd;\n  /**\n   * When present, textarea size changes as being typed.\n   * @group Props\n   */\n  autoResize;\n  /**\n   * Callback to invoke on textarea resize.\n   * @param {(Event | {})} event - Custom resize event.\n   * @group Emits\n   */\n  onResize = new EventEmitter();\n  filled;\n  cachedScrollHeight;\n  ngModelSubscription;\n  ngControlSubscription;\n  constructor(el, ngModel, control, cd) {\n    this.el = el;\n    this.ngModel = ngModel;\n    this.control = control;\n    this.cd = cd;\n  }\n  ngOnInit() {\n    if (this.ngModel) {\n      this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() => {\n        this.updateState();\n      });\n    }\n    if (this.control) {\n      this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n        this.updateState();\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this.autoResize) this.resize();\n    this.updateFilledState();\n    this.cd.detectChanges();\n  }\n  onInput(e) {\n    this.updateState();\n  }\n  updateFilledState() {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n  }\n  resize(event) {\n    this.el.nativeElement.style.height = 'auto';\n    this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n    if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n      this.el.nativeElement.style.overflowY = 'scroll';\n      this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n    } else {\n      this.el.nativeElement.style.overflow = 'hidden';\n    }\n    this.onResize.emit(event || {});\n  }\n  updateState() {\n    this.updateFilledState();\n    if (this.autoResize) {\n      this.resize();\n    }\n  }\n  ngOnDestroy() {\n    if (this.ngModelSubscription) {\n      this.ngModelSubscription.unsubscribe();\n    }\n    if (this.ngControlSubscription) {\n      this.ngControlSubscription.unsubscribe();\n    }\n  }\n  static ɵfac = function InputTextarea_Factory(t) {\n    return new (t || InputTextarea)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgModel, 8), i0.ɵɵdirectiveInject(i1.NgControl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: InputTextarea,\n    selectors: [[\"\", \"pInputTextarea\", \"\"]],\n    hostAttrs: [1, \"p-inputtextarea\", \"p-inputtext\", \"p-component\", \"p-element\"],\n    hostVars: 4,\n    hostBindings: function InputTextarea_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function InputTextarea_input_HostBindingHandler($event) {\n          return ctx.onInput($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-filled\", ctx.filled)(\"p-inputtextarea-resizable\", ctx.autoResize);\n      }\n    },\n    inputs: {\n      autoResize: \"autoResize\"\n    },\n    outputs: {\n      onResize: \"onResize\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextarea, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputTextarea]',\n      host: {\n        class: 'p-inputtextarea p-inputtext p-component p-element',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n      }\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i1.NgModel,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i1.NgControl,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: i0.ChangeDetectorRef\n  }], {\n    autoResize: [{\n      type: Input\n    }],\n    onResize: [{\n      type: Output\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }]\n  });\n})();\nclass InputTextareaModule {\n  static ɵfac = function InputTextareaModule_Factory(t) {\n    return new (t || InputTextareaModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: InputTextareaModule,\n    declarations: [InputTextarea],\n    imports: [CommonModule],\n    exports: [InputTextarea]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextareaModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputTextarea],\n      declarations: [InputTextarea]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputTextarea, InputTextareaModule };\n"],
  "mappings": "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",
  "names": []
}
